/*************** -*- Mode: MACSYMA; Package: MAXIMA -*-  ******************/
/***************************************************************************
***                                                                    *****
***     Copyright (c) 1984 by William Schelter,University of Texas     *****
***     All rights reserved                                            *****
***************************************************************************/


kill(all);
done;

1/(x^2+2);
1/(x^2+2)$
substpart(3/2,%,2,1,2);
1/(x^(3/2)+2)$
27*y^3+54*x*y^2+36*x^2*y+y+8*x^3+x+1;
27*y^3+54*x*y^2+36*x^2*y+y+8*x^3+x+1$
substpart(factor(piece),%,[1,2,3,5]);
(3*y+2*x)^3+y+x+1$
1/x+y/x-1/z;
-1/z+y/x+1/x$
substpart(xthru(piece),%,[2,3]);
(y+1)/x-1/z$
substpart("+",%,1,0);
-1/z+y+x+1$
ratsimp((k^2*x^2-1)*(cos(x)+eps)/(3*k+n[1])/(5*k-n[2]));
((k^2*x^2-1)*cos(x)+eps*k^2*x^2-eps)/(15*k^2+(5*n[1]-3*n[2])*k-n[1]*n[2])$
factor(%);
(k*x-1)*(k*x+1)*(cos(x)+eps)/((3*k+n[1])*(5*k-n[2]))$
substpart(ratsimp(piece),%,1,[1,2]);
(k^2*x^2-1)*(cos(x)+eps)/((3*k+n[1])*(5*k-n[2]))$
-substpart(-piece,%,1,1);
-((1-k^2*x^2)*(cos(x)+eps)/((3*k+n[1])*(5*k-n[2])))$
a+b/(x*(y+(a+b)*x)+1);
b/(x*(y+(b+a)*x)+1)+a$
substpart(multthru(piece),%,1,2,1);
b/(x*y+(b+a)*x^2+1)+a$
x . 'diff(f(x),x,2);
x . 'diff(f(x),x,2)$
substinpart(d^2,%,2);
x . d^2$
substinpart(f1,f[1](x+1),0);
f1(x+1)$

/* SF bug #2667: "tex1 of f(x)^n" */

simp:false $
false $

tex1 (sqrt(x)^n);
"\\sqrt{x}^{n}";

simp:true $
true $

tex1(sin(x)^2);
"\\sin ^2x";

tex1(f(x)^2);
"f\\left(x\\right)^2";

tex1(sin(x)^n);
"\\sin ^{n}x";

tex1(f(x)^n);
"f\\left(x\\right)^{n}";

tex1(sin(x)^-1);
"{{1}\\over{\\sin x}}";

tex1(f(x)^-1);
"{{1}\\over{f\\left(x\\right)}}";

tex1(sin(x)^-2);
"{{1}\\over{\\sin ^2x}}";

tex1(f(x)^-2);
"{{1}\\over{f\\left(x\\right)^2}}";

/* see: https://stackoverflow.com/questions/66056058/wxmaxima-texput-for-powers-of-expressions
 */

logexpand: false; /* disable log simplifications */
false;

foo: map (tex1, [log(x), log(x+1), log(x)^n]);
["\\log x","\\log \\left(x+1\\right)","\\left(\\log x\\right)^{n}"];

texput (log, "\\ln ");
"\\ln ";

bar: map (tex1, [log(x), log(x+1), log(x)^n]);
["\\ln x","\\ln \\left(x+1\\right)","\\left(\\ln x\\right)^{n}"];

/* verify that log is just as it was before but with \ln instead of \log */

if bar = map (lambda ([s], ssubst ("ln", "log", s)), foo) then true else bar;
true;

/* there's no user-level interface for this, and :lisp isn't recognized in test scripts, so ... */
block([simp:false], ?\*tex\-mexpt\-trig\-like\-fns\*: ?cons(log, ?\*tex\-mexpt\-trig\-like\-fns\*), 0);
0;

baz: map (tex1, [log(x), log(x+1), log(x)^n]);
["\\ln x","\\ln \\left(x+1\\right)","\\ln ^{n}x"];

/* verify that now, log acts just like tan in tex output */

map (lambda ([s], ssubst ("ln", "tan", s)), map (tex1, [tan(x), tan(x+1), tan(x)^n]));
''baz;

/* SF bug #4388: "tex() output under simp:false, incorrect placement of `+`" */

(kill (x, y, z, a, b, c), simp: false, 0);
0;

tex1 (x^(+5));
"x^{+5}";

tex1 (sin(+x));
"\\sin \\left(+x\\right)";

tex1 ([+x, +y, +z]);
"\\left[ +x , +y , +z \\right] ";

tex1 (abs (+a));
"\\left| +a\\right| ";

tex1(a + + b);
"a+\\left(+b\\right)";

tex1 (+a/b);
"{{+a}\\over{b}}";

tex1(+(a/b));
"+{{a}\\over{b}}";

tex1((+a)/b);
"{{+a}\\over{b}}";

tex1((+a)/(+b));
"{{+a}\\over{+b}}";

tex1 (x^(-5));
"x^ {- 5 }";

tex1 (sin(-x));
"\\sin \\left(-x\\right)";

tex1 ([-x, -y, -z]);
"\\left[ -x , -y , -z \\right] ";

tex1 (abs (-a));
"\\left| -a\\right| ";

tex1(a - - b);
"a-\\left(-b\\right)";

tex1 (-a/b);
"{{-a}\\over{b}}";

tex1(-(a/b));
"-\\left({{a}\\over{b}}\\right)";

tex1((-a)/b);
"{{-a}\\over{b}}";

tex1((-a)/(-b));
"{{-a}\\over{-b}}";

(reset (simp), 0);
0;

/* restore TeX properties */

(kill (log),
 ?pop (?\*tex\-mexpt\-trig\-like\-fns\*),
 0);
0;

(reset (), 0);
0;
